
[workspace]
name = "pharmacogx-gdr-prism-pipeline"
authors = ["Jermiah Joseph <bhklab.jermiahjoseph@gmail.com>"]
description = "Pipeline to process the PRISM data through the gDR tools and PharmacoGx"
license = "MIT"
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64"]

[environments]
quality = { features = ["quality"], solve-group = "default" }
docs = { features = ["docs"], solve-group = "default" }
pipeline = ["snakemake"]

[activation]
# convenient variables which can be used in scripts
env.CONFIG = "config"
env.METADATA = "metadata"
env.LOGS = "logs"
env.RAWDATA = "data/rawdata"
env.PROCDATA = "data/procdata"
env.RESULTS = "data/results"
env.SCRIPTS = "workflow/scripts"

[tasks]
download-depmap-index = "python $SCRIPTS/py/download_depmap_index.py"

[dependencies]
python = ">=3.12"
ipython = "*"
ipykernel = "*"
jupyterlab = "*"
pip = "*"
pandas = ">=2.2.3,<3"
rich = ">=14.0.0,<15"
tqdm = ">=4.67.1,<5"


############################################## QUALITY ###############################################
# Quality includes linting, type checking, and formatting
[feature.quality.dependencies]
ruff = "*"

[feature.quality.tasks]
ruff-check.cmd = ["ruff", "check"]
ruff-check.inputs = ["config/ruff.toml", "workflow"]
ruff-check.description = "Run ruff check"

ruff-format.cmd = ["ruff", "format"]
ruff-format.inputs = ["config/ruff.toml", "workflow"]
ruff-format.depends-on = ["ruff-check"]
ruff-format.description = "Run ruff format, run check first"

qc.depends-on = ["ruff-format", "ruff-check"]
qc.description = "Quality check: ruff check and format"

############################################## DOCS ################################################

[feature.docs.dependencies]
mkdocs = "*"
mkdocs-include-markdown-plugin = ">=7.0.0,<8"

[feature.docs.tasks.doc-build]
cmd = "mkdocs build -f mkdocs.yaml"
inputs = ["docs"]
outputs = ["site"]
description = "Build documentation with mkdocs"

[feature.docs.tasks.doc-serve]
cmd = "mkdocs serve -f mkdocs.yaml"
depends-on = ["doc-build"]
inputs = ["docs"]
description = "Serve documentation with mkdocs, runs doc-build first"

[feature.snakemake.dependencies]
snakemake = "*"
